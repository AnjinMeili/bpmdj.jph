HEADERS = ${shell ls *.h++ 2>/dev/null | grep -v .*\.L.h++ 2>/dev/null}
SOURCES = ${shell ls *.c++ 2>/dev/null | grep -v .*\.L.c++ 2>/dev/null}
AO      = ${shell ls *.ao  2>/dev/null | grep -v .*\.L.c++ 2>/dev/null}
DO      = ${shell ls *.do  2>/dev/null | grep -v .*\.L.c++ 2>/dev/null}

.PHONY:.sources .cflags
.sources: version.h authors.cpp $(HEADERS:%.h++=%.h) $(SOURCES:%.c++=%.cpp) $(AO:%.ao=%.h) $(DO:%.do=%.h) \
	.cflags
	@cat .cflags >/tmp/t
	@grep "#include\ *\"" *.h *.cpp >>/tmp/t
	@if ! [ -e .sources ]; then cp /tmp/t .sources; fi
	@if ! cmp /tmp/t .sources >/dev/null; then mv /tmp/t .sources; fi

.cflags:
	@echo $(VERSION) >/tmp/t
	@echo $(CFLAGS) >>/tmp/t
	@echo $(CPP) >>/tmp/t
	@if ! [ -e .cflags ]; then cp /tmp/t .cflags; touch *.h *.cpp; fi
	@if ! cmp /tmp/t .cflags >/dev/null; then mv /tmp/t .cflags; touch *.h *.cpp; fi

%.h: %.ao Active/aoc
	@echo "  [aoc] "$@
	@./Active/aoc $< $@

%.h: %.do Data/doc
	@echo "  [doc] "$@
	@./Data/doc --noaccess $< $@

# The .h and .cpp sources are generated from corresponding .h++ and .c++ 
# sources. This allows us to automatically prefix a copyright header, 
# precompile specific constructs (iterators) and ensure that each header file
# will be loaded only once
%.h: %.h++ header.txt ++2--
	@echo "  [h++] "$@
	@"./++2--" $< $@
	   
%.cpp: %.c++ header.txt ++2--
	@echo "  [c++] "$@
	@"./++2--" $< $@

%.o: %.cpp
	@echo "  [cpp] "$@
	@$(CPP) -c $< $(CFLAGS) -o $@ $(QT_INCLUDE_PATH)

fixname: fixname.o
	@echo " [link] "$@
	@$(LINK) $(CFLAGS) $< -o $@

profile-clock: profile-clock.o
	@echo " [link] "$@
	@$(LINK) $(CFLAGS) $< -o $@

version.h: profile-clock
	@echo " [test] clock - 10 seconds"
	@echo "#define VERSION \""$(VERSION)"\"" >version.h
	@./profile-clock >>version.h

authors.cpp: authors.txt
	@echo "  [cpp] authors.cpp"
	@echo "const char* authors=" >$@
	@gawk '{print "\""$$0"\\n\""}' <$< >>$@
	@echo ';' >>$@
